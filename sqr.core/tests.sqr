# quick test file to check integrity

log(3);
cout(" # sqr test # ");

cout("dynamic variables and references");
*~ a <~ 5;
*~ b <& a;
a <~ 10;
if (a == b) {
	cout("WORKS");
} else {
	cout("FAILS");
}

cout("qollections and objeqts");
*~ c <~ { q <~ 10, w <~ "asd" };
*~ d <~ [ 2, 5, 10, 32 ];

*~ cd <~ c:q + d:2;
if (cd == 20) {
	cout("WORKS");
} else {
	cout("FAILS");
}

cout("funqtions and weighted operation");
funq f (j, k {
	return j * k + (cd + 1);			# <- also tests qontext
});

if (f(4, 2) == 29) {
	cout("WORKS");
} else {
	cout("FAILS");
}

cout("if else conditions");
if (a > 1 && cd < 100) {
	if (a > 32) {
		cout("FAILS");
	} else {
		cout("WORKS");
	}
} else {
	cout("FAILS");
}

funq fib (a, b {
	cout(a + b);
	if (a < 99999) {
		fib(b, a + b);
	}
});

cout("types and typing");
@number num <~ 100;
@string str <~ 'hello my friends';
num <~ str;

cout("if an error came, it works. no try catch yet.");

cout("done!");


